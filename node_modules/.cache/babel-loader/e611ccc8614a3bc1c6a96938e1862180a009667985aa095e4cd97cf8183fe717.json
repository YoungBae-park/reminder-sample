{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  const handlePost = async () => {\n    try {\n      const response = await fetch('./api/some-endpoint?name=Paul');\n      if (!response.ok) {\n        console.log('에러남');\n        throw new Error(response.statusText);\n      }\n      console.log('에러안남');\n      console.log('response', response);\n      console.log(typeof response);\n      const data = await response;\n      console.log('data', data);\n      setResponse(data);\n    } catch (error) {\n      setResponse(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(response, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TM4HGnxieAxLTyBQJEA7E7LlHYI=\");\n_c = App;\nexport default App;\n\n//--------------------------------------\n/* return (\n  <div className=\"App\">\n    <div>\n      {data.map((row) => {\n        return (<div>아이디: {row[languageList[0]]}</div>)\n      })}\n    </div>\n    {standardTime}\n    <button onClick={onReset} >리셋</button>\n  </div>\n); */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","response","setResponse","handlePost","fetch","ok","console","log","Error","statusText","data","error","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n//import file from './date.txt';\n//import axios from 'axios';\n\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n\n\n  const [response, setResponse] = useState(null);\n\n  const handlePost = async () => {\n    try {\n      const response = await fetch('./api/some-endpoint?name=Paul');\n      if (!response.ok) {\n        console.log('에러남')\n        throw new Error(response.statusText);\n\n      }\n      console.log('에러안남');\n      console.log('response', response);\n      console.log(typeof response)\n      const data = await response;\n      console.log('data',data);\n      setResponse(data);\n    } catch (error) {\n      setResponse(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handlePost}>Post</button>\n      <pre>{JSON.stringify(response, null, 2)}</pre>\n    </div>\n  );\n\n \n\n\n}\n\nexport default App;\n\n\n\n\n\n//--------------------------------------\n/* return (\n  <div className=\"App\">\n    <div>\n      {data.map((row) => {\n        return (<div>아이디: {row[languageList[0]]}</div>)\n      })}\n    </div>\n    {standardTime}\n    <button onClick={onReset} >리셋</button>\n  </div>\n); */"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA;;AAGA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMF,QAAQ,GAAG,MAAMG,KAAK,CAAC,+BAA+B,CAAC;MAC7D,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClB,MAAM,IAAIC,KAAK,CAACP,QAAQ,CAACQ,UAAU,CAAC;MAEtC;MACAH,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEN,QAAQ,CAAC;MACjCK,OAAO,CAACC,GAAG,CAAC,OAAON,QAAQ,CAAC;MAC5B,MAAMS,IAAI,GAAG,MAAMT,QAAQ;MAC3BK,OAAO,CAACC,GAAG,CAAC,MAAM,EAACG,IAAI,CAAC;MACxBR,WAAW,CAACQ,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdT,WAAW,CAACS,KAAK,CAACC,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEX,UAAW;MAAAU,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC1CpB,OAAA;MAAAe,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACnB,QAAQ,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAMV,CAAC;AAAAlB,EAAA,CAlCKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCT,eAAeA,GAAG;;AAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}