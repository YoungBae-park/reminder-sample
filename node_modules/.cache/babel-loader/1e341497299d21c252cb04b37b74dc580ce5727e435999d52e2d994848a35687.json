{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\";\nimport './App.css';\n//import Output from './Output'\nimport React from 'react';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  /*  const data = {\n     //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n    key : \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n     title: 'React POST Request Example'\n   } */\n\n  // Simple POST request with a JSON body using fetch\n\n  //const data = new FormData();\n  const url = \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\";\n  //data.append(\"title\", \"hello\");\n  const data = {\n    'title': 'hello'\n  };\n  let getResponse;\n  const requestOptions = {\n    method: 'POST',\n    mode: 'no-cors',\n    credentials: 'include',\n    headers: {\n      'Contents-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  };\n  async function getValue() {\n    try {\n      let getResults = await fetch(url, requestOptions);\n      console.log(\"getResults\");\n      console.log(getResults.headers.get('Location'));\n      getResponse = await getResults.json();\n      console.log(\"TryGetResponse\");\n      console.log(getResponse);\n    } catch (e) {\n      getResponse = {\n        \"result\": \"200OK\",\n        \"elapsedTime\": 0.0\n      };\n      console.log(\"catchGetResponse\");\n      console.log(getResponse);\n    }\n    return getResponse;\n  }\n  const onClick = async () => {\n    const returnVal = getValue();\n    console.log(\"리턴벨류\");\n    console.log(returnVal);\n    console.log(\"리턴밸류 종료\");\n    await fetch(returnVal.location).then(Response => {\n      console.log(Response);\n    }).catch();\n  };\n\n  /*   const onClick = () => {\n  \n      axios.defaults.withCredentials = true;\n  \n      axios.post(`${url}`, {},\n  {\n  \twithCredentials: true // 쿠키 cors 통신 설정\n  }).then(response => {\n  \tconsole.log(response);\n  });\n    } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uACB0\\uACFC \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uCD9C\\uB825\\uAC12 : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","url","data","getResponse","requestOptions","method","mode","credentials","headers","body","JSON","stringify","getValue","getResults","fetch","console","log","get","json","e","onClick","returnVal","location","then","Response","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\n//import Output from './Output'\nimport React from 'react';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n\n\n\n /*  const data = {\n    //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n   key : \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n    title: 'React POST Request Example'\n  } */\n\n      // Simple POST request with a JSON body using fetch\n\n//const data = new FormData();\nconst url = \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\"\n//data.append(\"title\", \"hello\");\nconst data = {'title': 'hello'}\nlet getResponse;\n    const requestOptions = {\n        method: 'POST',\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: { 'Contents-Type': 'application/json'},\n       body: JSON.stringify(data)\n    };\n\n\n\n  async function getValue (){\n    try {\n      let getResults = await fetch(url,requestOptions);\n      console.log(\"getResults\");\n      console.log(getResults.headers.get('Location'));\n    getResponse = await getResults.json();\n    console.log(\"TryGetResponse\")\n    console.log(getResponse);\n  } catch (e) {\n    getResponse = {\n      \"result\" : \"200OK\",\n        \"elapsedTime\" : 0.0\n  }\n  console.log(\"catchGetResponse\")\n  console.log(getResponse)\n\n}\n\n return (getResponse);\n  }\n\n  const onClick =async () => {\n      const returnVal = getValue();\n      console.log(\"리턴벨류\");\n      console.log(returnVal);\n      console.log(\"리턴밸류 종료\")\n     await fetch (returnVal.location)\n      .then(Response => {console.log(Response)}).catch()\n\n\n  }\n \n/*   const onClick = () => {\n\n    axios.defaults.withCredentials = true;\n\n    axios.post(`${url}`, {},\n{\n\twithCredentials: true // 쿠키 cors 통신 설정\n}).then(response => {\n\tconsole.log(response);\n});\n  } */\n  \n\nreturn (\n      <div>\n        <button onClick={onClick}>결과 확인</button> \n        <div>출력값 : {}</div>\n      </div>\n  );\n\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAIjB;AACD;AACA;AACA;AACA;;EAEM;;EAEN;EACA,MAAMC,GAAG,GAAG,kHAAkH;EAC9H;EACA,MAAMC,IAAI,GAAG;IAAC,OAAO,EAAE;EAAO,CAAC;EAC/B,IAAIC,WAAW;EACX,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MAAE,eAAe,EAAE;IAAkB,CAAC;IAChDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;EAC5B,CAAC;EAIH,eAAeU,QAAQA,CAAA,EAAG;IACxB,IAAI;MACF,IAAIC,UAAU,GAAG,MAAMC,KAAK,CAACb,GAAG,EAACG,cAAc,CAAC;MAChDW,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACH,UAAU,CAACL,OAAO,CAACS,GAAG,CAAC,UAAU,CAAC,CAAC;MACjDd,WAAW,GAAG,MAAMU,UAAU,CAACK,IAAI,EAAE;MACrCH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOgB,CAAC,EAAE;MACVhB,WAAW,GAAG;QACZ,QAAQ,EAAG,OAAO;QAChB,aAAa,EAAG;MACtB,CAAC;MACDY,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;IAE1B;IAEC,OAAQA,WAAW;EAClB;EAEA,MAAMiB,OAAO,GAAE,MAAAA,CAAA,KAAY;IACvB,MAAMC,SAAS,GAAGT,QAAQ,EAAE;IAC5BG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAACK,SAAS,CAAC;IACtBN,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACvB,MAAMF,KAAK,CAAEO,SAAS,CAACC,QAAQ,CAAC,CAC9BC,IAAI,CAACC,QAAQ,IAAI;MAACT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;IAAA,CAAC,CAAC,CAACC,KAAK,EAAE;EAGtD,CAAC;;EAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGA,oBACM1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAQqB,OAAO,EAAEA,OAAQ;MAAAM,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxC/B,OAAA;MAAA2B,QAAA,EAAK;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAIZ,CAAC;AAAAC,EAAA,GAhFK/B,GAAG;AAkFT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}