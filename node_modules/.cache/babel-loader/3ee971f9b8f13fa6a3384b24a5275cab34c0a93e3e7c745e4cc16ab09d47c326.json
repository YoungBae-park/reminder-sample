{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/components/ListItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItem = _ref => {\n  _s();\n  let {\n    item,\n    onDeleteRow,\n    onReset\n  } = _ref;\n  const {\n    id,\n    title,\n    period,\n    last_time\n  } = item;\n  const [intervalTimeText, setIntervalTimeText] = useState();\n  const [beforeDateTime, setBeforeDateTime] = useState();\n  (() => {\n    let now = new Date();\n    const deffer = now - Date.parse(last_time);\n    const day = deffer / (1000 * 3600 * 24);\n    const hour = deffer % (1000 * 3600 * 24) / (1000 * 3600);\n    const minute = deffer % (1000 * 3600 * 24) % (1000 * 3600) / (1000 * 60);\n    const second = deffer % (1000 * 3600 * 24) % (1000 * 3600) % (1000 * 60) / 1000;\n    setIntervalTimeText(Math.floor(day) + '일 ' + Math.floor(hour) + '시 ' + Math.floor(minute) + '분' + Math.floor(second) + '초');\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoListItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [title, \"(\\uC8FC\\uAE30:\", period, \") \\uACBD\\uACFC\\uC2DC\\uAC04:\", intervalTimeText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDeleteRow(id),\n      children: \"\\uC81C\\uAC70\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onReset(id),\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ListItem, \"oFPqZRh+LKiwgM9Gf+RjqNSP3z8=\");\n_c = ListItem;\nexport default ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ListItem","_ref","_s","item","onDeleteRow","onReset","id","title","period","last_time","intervalTimeText","setIntervalTimeText","beforeDateTime","setBeforeDateTime","now","Date","deffer","parse","day","hour","minute","second","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/components/ListItem.js"],"sourcesContent":["import React, {useState} from 'react';\n\nconst ListItem = ({item, onDeleteRow, onReset}) => {\n    const {id, title, period, last_time } = item;\n    const [intervalTimeText,setIntervalTimeText] = useState();\n    const [beforeDateTime, setBeforeDateTime] = useState();\n\n    (() => {\n        let now = new Date();\n        const deffer = now - Date.parse(last_time);\n        const day = deffer/(1000*3600*24);\n        const hour = ((deffer%(1000*3600*24))/(1000*3600));\n        const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n        const second = ((deffer%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n        setIntervalTimeText(Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분'+Math.floor(second)+'초') ;\n    })();\n\n\n\n    return (\n        <div className=\"TodoListItem\">\n            <div className=\"checkbox\">\n                <div className=\"text\">{title}&#40;주기:{period}&#41; 경과시간:{intervalTimeText}</div>\n            </div>\n            <button onClick={() => onDeleteRow(id)}>\n                제거\n            </button>\n            <button onClick={() => onReset(id)}>\n                초기화\n            </button>\n        </div>\n    )\n}\n\nexport default ListItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAACC,IAAI;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EAC1C,MAAM;IAACK,EAAE;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGN,IAAI;EAC5C,MAAM,CAACO,gBAAgB,EAACC,mBAAmB,CAAC,GAAGd,QAAQ,EAAE;EACzD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,EAAE;EAEtD,CAAC,MAAM;IACH,IAAIiB,GAAG,GAAG,IAAIC,IAAI,EAAE;IACpB,MAAMC,MAAM,GAAGF,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACR,SAAS,CAAC;IAC1C,MAAMS,GAAG,GAAGF,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC;IACjC,MAAMG,IAAI,GAAKH,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAE;IAClD,MAAMI,MAAM,GAAKJ,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAC,IAAG,IAAI,GAAC,EAAE,CAAC;IAC9D,MAAMK,MAAM,GAAKL,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAC,IAAG,IAAI,GAAC,EAAE,CAAC,GAAC,IAAI;IACnEL,mBAAmB,CAACW,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,GAAC,IAAI,GAACI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAC,IAAI,GAACG,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,GAAC,GAAG,GAACE,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,GAAC,GAAG,CAAC;EACjH,CAAC,GAAG;EAIJ,oBACItB,OAAA;IAAKyB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzB1B,OAAA;MAAKyB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACrB1B,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAElB,KAAK,EAAC,gBAAQ,EAACC,MAAM,EAAC,6BAAW,EAACE,gBAAgB;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9E,eACN9B,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAM1B,WAAW,CAACE,EAAE,CAAE;MAAAmB,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACT9B,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAMzB,OAAO,CAACC,EAAE,CAAE;MAAAmB,QAAA,EAAC;IAEpC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAA3B,EAAA,CA9BKF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}