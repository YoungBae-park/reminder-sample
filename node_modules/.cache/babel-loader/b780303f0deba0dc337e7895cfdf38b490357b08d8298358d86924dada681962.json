{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\";\nimport './App.css';\nimport googleApi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const start = () => {\n    googleApi.client.init({\n      'apiKey': 'AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0',\n      'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/translate/v2/rest']\n    }).then(() => {\n      return googleApi.client.language.translations.list({\n        q: 'hello world',\n        source: 'en',\n        target: 'de'\n      });\n    }).then(response => {\n      console.log(response.result.data.translations[0].translatedText);\n    }, reason => {\n      console.log('Error: ' + reason.result.error.message);\n    });\n  };\n  googleApi.load('client', start);\n  const data = {\n    key: \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\"\n  };\n  const onClick = async () => {\n    await fetch(\"https://sheets.googleapis.com//auth/spreadsheets/12xvrWKrNc9c0QotSRIoF7a8NvULziuIhavvVnKo7RsY/values/A2:clear\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseData => {\n      console.log(responseData);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uACB0\\uACFC \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["googleApi","jsxDEV","_jsxDEV","App","start","client","init","then","language","translations","list","q","source","target","response","console","log","result","data","translatedText","reason","error","message","load","key","onClick","fetch","method","headers","body","JSON","stringify","json","responseData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport googleApi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n  const start = () =>{\n  googleApi.client.init({\n    'apiKey': 'AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0',\n    'discoveryDocs' : ['https://www.googleapis.com/discovery/v1/apis/translate/v2/rest']\n  }).then(() => {\n    return googleApi.client.language.translations.list({\n      q: 'hello world',\n            source: 'en',\n            target: 'de',\n    });\n  }).then((response) => {\n    console.log(response.result.data.translations[0].translatedText);\n  }, (reason) => {\n    console.log('Error: ' + reason.result.error.message);\n  });\n  }\n\n\n  \n  googleApi.load('client',start)\n\n  const data = {\n    key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\"\n  }\n  const onClick = async () => {\n  await fetch(\"https://sheets.googleapis.com//auth/spreadsheets/12xvrWKrNc9c0QotSRIoF7a8NvULziuIhavvVnKo7RsY/values/A2:clear\",\n   {method : \"POST\",\n  headers : {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  },\n    body: JSON.stringify(data)\n  }\n  ).then(\n    response => response.json())\n  .then(\n      responseData => {console.log(responseData)}\n    )\n  }\n  \n\nreturn (\n      <div>\n        <button onClick={onClick}>결과 확인</button> \n        <div></div>\n      </div>\n  );\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA;AACA;AACA;AACA;;AAGA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,KAAK,GAAGA,CAAA,KAAK;IACnBJ,SAAS,CAACK,MAAM,CAACC,IAAI,CAAC;MACpB,QAAQ,EAAE,yCAAyC;MACnD,eAAe,EAAG,CAAC,gEAAgE;IACrF,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACZ,OAAOP,SAAS,CAACK,MAAM,CAACG,QAAQ,CAACC,YAAY,CAACC,IAAI,CAAC;QACjDC,CAAC,EAAE,aAAa;QACVC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,CAACN,IAAI,CAAEO,QAAQ,IAAK;MACpBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACT,YAAY,CAAC,CAAC,CAAC,CAACU,cAAc,CAAC;IAClE,CAAC,EAAGC,MAAM,IAAK;MACbL,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGI,MAAM,CAACH,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC;IACtD,CAAC,CAAC;EACF,CAAC;EAIDtB,SAAS,CAACuB,IAAI,CAAC,QAAQ,EAACnB,KAAK,CAAC;EAE9B,MAAMc,IAAI,GAAG;IACXM,GAAG,EAAG;EACR,CAAC;EACD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,CAAC,+GAA+G,EAC1H;MAACC,MAAM,EAAG,MAAM;MACjBC,OAAO,EAAG;QACR,cAAc,EAAE;MAClB,CAAC;MACCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;IAC3B,CAAC,CACA,CAACX,IAAI,CACJO,QAAQ,IAAIA,QAAQ,CAACkB,IAAI,EAAE,CAAC,CAC7BzB,IAAI,CACD0B,YAAY,IAAI;MAAClB,OAAO,CAACC,GAAG,CAACiB,YAAY,CAAC;IAAA,CAAC,CAC5C;EACH,CAAC;EAGH,oBACM/B,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAQuB,OAAO,EAAEA,OAAQ;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxCpC,OAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAGZ,CAAC;AAAAC,EAAA,GAhDKpC,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}