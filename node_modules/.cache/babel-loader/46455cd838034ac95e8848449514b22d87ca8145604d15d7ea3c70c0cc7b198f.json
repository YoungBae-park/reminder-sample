{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/components/ListItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItem = _ref => {\n  let {\n    item,\n    onDeleteRow,\n    onReset\n  } = _ref;\n  const {\n    id,\n    title,\n    period,\n    last_time,\n    intervalTimeText,\n    remainDateTime\n  } = item;\n  /*     const [intervalTimeText,setIntervalTimeText] = useState();\n      const [remainDateTime, setRemainDateTime] = useState(); \n      const [remain , setRemain] = useState(0);\n      const [deffer, setDeffer] = useState(0);\n  */\n\n  /* \n      console.log(\"period 의 값\"+period);\n  \n      let now = new Date();\n      setDeffer(now - Date.parse(last_time));\n  \n      if ((period*1000*3600*24-deffer) < 0) { \n          console.log('if문에 들어왔습니다.')\n          setRemain(0);\n      }else{\n          setRemain(period*1000*3600*24-deffer);\n      } */\n\n  /*         useEffect(() => {\n  \n          const day = deffer/(1000*3600*24);\n          const hour = ((deffer%(1000*3600*24))/(1000*3600));\n          const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n          const second = ((deffer%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n  \n          const remain_day = remain/(1000*3600*24);\n          const remain_hour = ((remain%(1000*3600*24))/(1000*3600));\n          const remain_minute = ((remain%(1000*3600*24))%(1000*3600))/(1000*60);\n          const remain_second = ((remain%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n          \n              setIntervalTimeText(Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분'+Math.floor(second)+'초') ;\n              setRemainDateTime(Math.floor(remain_day)+'일 '+Math.floor(remain_hour)+'시 '+Math.floor(remain_minute)+'분'+Math.floor(remain_second)+'초') ;\n      \n          }, [deffer, remain]) */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoListItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: [title, \"(\\uC8FC\\uAE30:\", period, \") // \\uC800\\uC7A5\\uC2DC\\uAC01 : \", last_time, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACBD\\uACFC\\uC2DC\\uAC04:\", intervalTimeText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uB0A8\\uC740\\uC2DC\\uAC04:\", remainDateTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDeleteRow(id),\n      children: \"\\uC81C\\uAC70\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onReset(id),\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = ListItem;\nexport default ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["ListItem","_ref","item","onDeleteRow","onReset","id","title","period","last_time","intervalTimeText","remainDateTime","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/components/ListItem.js"],"sourcesContent":["const ListItem = ({item, onDeleteRow, onReset}) => {\n    const {id, title, period, last_time, intervalTimeText, remainDateTime } = item;\n/*     const [intervalTimeText,setIntervalTimeText] = useState();\n    const [remainDateTime, setRemainDateTime] = useState(); \n    const [remain , setRemain] = useState(0);\n    const [deffer, setDeffer] = useState(0);\n*/\n\n/* \n    console.log(\"period 의 값\"+period);\n\n    let now = new Date();\n    setDeffer(now - Date.parse(last_time));\n\n    if ((period*1000*3600*24-deffer) < 0) { \n        console.log('if문에 들어왔습니다.')\n        setRemain(0);\n    }else{\n        setRemain(period*1000*3600*24-deffer);\n    } */\n\n   \n    \n/*         useEffect(() => {\n\n        const day = deffer/(1000*3600*24);\n        const hour = ((deffer%(1000*3600*24))/(1000*3600));\n        const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n        const second = ((deffer%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n\n        const remain_day = remain/(1000*3600*24);\n        const remain_hour = ((remain%(1000*3600*24))/(1000*3600));\n        const remain_minute = ((remain%(1000*3600*24))%(1000*3600))/(1000*60);\n        const remain_second = ((remain%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n        \n            setIntervalTimeText(Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분'+Math.floor(second)+'초') ;\n            setRemainDateTime(Math.floor(remain_day)+'일 '+Math.floor(remain_hour)+'시 '+Math.floor(remain_minute)+'분'+Math.floor(remain_second)+'초') ;\n    \n        }, [deffer, remain]) */\n\n      \n    \n\n\n    return (\n        <div className=\"TodoListItem\">\n            \n                <div className=\"text\">{title}&#40;주기:{period}&#41; // 저장시각 : {last_time} </div>\n                <div>경과시간:{intervalTimeText} </div>\n                <div>남은시간:{remainDateTime}</div>\n            <button onClick={() => onDeleteRow(id)}>\n                제거\n            </button>\n            <button onClick={() => onReset(id)}>\n                초기화\n            </button>\n        </div>\n    )\n}\n\nexport default ListItem;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,IAAA,IAAkC;EAAA,IAAjC;IAACC,IAAI;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC1C,MAAM;IAACI,EAAE;IAAEC,KAAK;IAAEC,MAAM;IAAEC,SAAS;IAAEC,gBAAgB;IAAEC;EAAe,CAAC,GAAGR,IAAI;EAClF;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAMI,oBACIS,OAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAErBF,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,GAAEP,KAAK,EAAC,gBAAQ,EAACC,MAAM,EAAC,kCAAgB,EAACC,SAAS,EAAC,GAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/EN,OAAA;MAAAE,QAAA,GAAK,2BAAK,EAACJ,gBAAgB,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnCN,OAAA;MAAAE,QAAA,GAAK,2BAAK,EAACH,cAAc;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACpCN,OAAA;MAAQO,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACE,EAAE,CAAE;MAAAQ,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTN,OAAA;MAAQO,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAACC,EAAE,CAAE;MAAAQ,QAAA,EAAC;IAEpC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAAE,EAAA,GA1DKnB,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}