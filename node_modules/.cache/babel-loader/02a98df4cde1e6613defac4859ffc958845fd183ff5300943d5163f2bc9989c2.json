{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [beforeDateTime, setBeforeDateTime] = useState();\n  const [intervalTimeText, setIntervalTimeText] = useState();\n  const url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\";\n  //const url = \"https://script.google.com/macros/s/AKfycbyt8mCKyL3Asnos11sQW2RW1pJ_19pS4Um3W4DNdt8/dev\"\n\n  const data = {\n    reqType: 'saveNow'\n  };\n\n  /*   const data2 = {\n      reqType :'saveNow'\n      }; */\n\n  async function getValue() {\n    await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {\n      console.log('res : ' + res.data);\n      // let beforeDateTime = res.data;\n      //setBeforeDateTime(new Date(res.data));\n      //const date = new Date();\n      console.log(\"dataparse : \" + Date.parse(res.data));\n      // setBeforeDateTime(Date.parse(res.data));\n      console.log(\"beforeDateTime : \" + beforeDateTime);\n      let now = new Date();\n      console.log('현재시간 : ' + now + typeof now);\n      const deffer = now - Date.parse(res.data);\n      setBeforeDateTime(res.data);\n      console.log('이전시간 : ' + beforeDateTime + typeof beforeDateTime);\n      console.log('시간차이 : ' + deffer);\n      const day = deffer / (1000 * 3600 * 24);\n      const hour = deffer % (1000 * 36000 * 24) / (1000 * 3600);\n      const minute = deffer % (1000 * 3600 * 24) % (1000 * 3600) / (1000 * 60);\n      setIntervalTimeText('경과시간 : ' + Math.floor(day) + '일 ' + Math.floor(hour) + '시 ' + Math.floor(minute) + '분');\n      console.log(\"'\" + beforeDateTime + \"'\" + typeof beforeDateTime);\n      console.log(intervalTimeText + typeof intervalTimeText);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // 페이지 바로 동작\n  //getValue();\n\n  // 현재시간 저장 요청\n  async function onSave() {\n    await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {\n      console.log('저장요청이 완료되었습니다.');\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC18C\\uC911\\uC774 \\uB9C8\\uC9C0\\uB9C9 \\uBB3C\\uAC08\\uC774 \\uC2DC\\uAC04 : \", beforeDateTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACBD\\uACFC\\uC2DC\\uAC04 : \", intervalTimeText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"\\uBB3C\\uAC08\\uC774\\uB97C \\uC644\\uB8CC\\uD588\\uC2B5\\uB2C8\\uB2E4. (\\uD604\\uC7AC\\uB97C \\uC800\\uC7A5\\uD569\\uB2C8\\uB2E4. )\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getValue,\n      children: \"\\uC2E4\\uD589\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"0nJo/UcvgoGSDO4ozyiT7kmyEUc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","beforeDateTime","setBeforeDateTime","intervalTimeText","setIntervalTimeText","url","data","reqType","getValue","post","headers","allowRedirects","then","res","console","log","Date","parse","now","deffer","day","hour","minute","Math","floor","catch","err","onSave","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport React , {useState}from 'react';\nimport axios from 'axios';\n\n\n\nconst App = () => {\n\n  const [beforeDateTime, setBeforeDateTime] = useState();\n  const [intervalTimeText,setIntervalTimeText] = useState();\nconst url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\"\n//const url = \"https://script.google.com/macros/s/AKfycbyt8mCKyL3Asnos11sQW2RW1pJ_19pS4Um3W4DNdt8/dev\"\n\nconst data = {\n    reqType: 'saveNow',\n  };\n\n/*   const data2 = {\n    reqType :'saveNow'\n    }; */\n\n\n  async function getValue (){\n  \n    await axios.post(url,data, {\n          headers: {\n            \"Content-Type\": \"text/plain;charset=utf-8\",\n          allowRedirects: false \n          }\n        }).then(res => {\n        console.log('res : '+res.data );\n       // let beforeDateTime = res.data;\n         //setBeforeDateTime(new Date(res.data));\n         //const date = new Date();\n         console.log(\"dataparse : \"+Date.parse(res.data))\n        // setBeforeDateTime(Date.parse(res.data));\n         console.log(\"beforeDateTime : \"+beforeDateTime);\n         let now = new Date();\n         console.log('현재시간 : '+now+typeof(now));\n         const deffer = now - Date.parse(res.data);\n        setBeforeDateTime(res.data) ;\n         console.log('이전시간 : ' + beforeDateTime+ typeof(beforeDateTime));\n         console.log('시간차이 : '+ deffer);\n         const day = deffer/(1000*3600*24);\n         const hour = ((deffer%(1000*36000*24))/(1000*3600));\n         const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n         setIntervalTimeText('경과시간 : ' +Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분') ;\n         console.log(\"'\"+beforeDateTime+\"'\"+typeof(beforeDateTime))\n         console.log(intervalTimeText+typeof(intervalTimeText));\n       \n      }).catch(err => {\n        console.log(err)\n      });\n\n  }\n  \n  // 페이지 바로 동작\n//getValue();\n\n// 현재시간 저장 요청\nasync function onSave () {\n  await axios.post(url,data, {\n    headers: {\n      \"Content-Type\" : \"text/plain;charset=utf-8\",\n      allowRedirects: false\n    }\n  }).then(res=> {\n  console.log('저장요청이 완료되었습니다.')\n  console.log(res);\n  }).catch(err => {\n    console.log(err);\n  })\n}\n\nreturn (\n      <div>\n\n        <div>소중이 마지막 물갈이 시간 : {beforeDateTime}</div>\n        <div>경과시간 : {intervalTimeText}</div>\n        <button onClick={onSave}>물갈이를 완료했습니다.\t&#40;현재를 저장합니다.\t&#41;</button> \n\n\n        <button onClick={getValue}>실행</button> \n      </div>\n  );\n\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}