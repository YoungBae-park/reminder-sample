{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  //const [beforeDateTime, setBeforeDateTime] = useState();\n  //const [intervalTimeText,setIntervalTimeText] = useState();\n  const url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\";\n  const data = {\n    title: 'test'\n  };\n  let beforeDateTime;\n  let intervalTimeText;\n  async function getValue() {\n    await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {\n      console.log('res : ' + res.data);\n      // let beforeDateTime = res.data;\n      //setBeforeDateTime(new Date(res.data));\n      //const date = new Date();\n      console.log(\"dataparse : \" + Date.parse(res.data));\n      // setBeforeDateTime(Date.parse(res.data));\n      console.log(\"beforeDateTime : \" + beforeDateTime);\n      let now = new Date();\n      console.log('현재시간 : ' + now + typeof now);\n      const deffer = now - Date.parse(res.data);\n      beforeDateTime = res.data;\n      console.log('이전시간 : ' + beforeDateTime + typeof beforeDateTime);\n      console.log('시간차이 : ' + deffer);\n      const day = deffer / (1000 * 3600 * 24);\n      const hour = deffer % (1000 * 36000 * 24) / (1000 * 3600);\n      const minute = deffer % (1000 * 3600 * 24) % (1000 * 3600) / (1000 * 60);\n      intervalTimeText = '경과시간 : ' + Math.floor(day) + '일 ' + Math.floor(hour) + '시 ' + Math.floor(minute) + '분';\n      console.log(\"'\" + beforeDateTime + \"'\" + typeof beforeDateTime);\n      console.log(intervalTimeText + typeof intervalTimeText);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // 페이지 바로 동작\n  //getValue();\n\n  // 현재시간 저장 요청\n  async function onSave() {\n    await axios.post(url, {\n      reqType: 'saveNow'\n    }, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {}).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC18C\\uC911\\uC774 \\uB9C8\\uC9C0\\uB9C9 \\uBB3C\\uAC08\\uC774 \\uC2DC\\uAC04 : \", beforeDateTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACBD\\uACFC\\uC2DC\\uAC04 : \", intervalTimeText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"\\uBB3C\\uAC08\\uC774\\uB97C \\uC644\\uB8CC\\uD588\\uC2B5\\uB2C8\\uB2E4. (\\uD604\\uC7AC\\uB97C \\uC800\\uC7A5\\uD569\\uB2C8\\uB2E4. )\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getValue,\n      children: \"\\uC2E4\\uD589\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","url","data","title","beforeDateTime","intervalTimeText","getValue","post","headers","allowRedirects","then","res","console","log","Date","parse","now","deffer","day","hour","minute","Math","floor","catch","err","onSave","reqType","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport React , {useState}from 'react';\nimport axios from 'axios';\n\n\n\nconst App = () => {\n\n  //const [beforeDateTime, setBeforeDateTime] = useState();\n  //const [intervalTimeText,setIntervalTimeText] = useState();\nconst url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\"\n\nconst data = {\n    title: 'test',\n  };\n\n\n let  beforeDateTime ;\n  let intervalTimeText ;\n\n  async function getValue (){\n  \n    await axios.post(url,data, {\n          headers: {\n            \"Content-Type\": \"text/plain;charset=utf-8\",\n          allowRedirects: false \n          }\n        }).then(res => {\n        console.log('res : '+res.data );\n       // let beforeDateTime = res.data;\n         //setBeforeDateTime(new Date(res.data));\n         //const date = new Date();\n         console.log(\"dataparse : \"+Date.parse(res.data))\n        // setBeforeDateTime(Date.parse(res.data));\n         console.log(\"beforeDateTime : \"+beforeDateTime);\n         let now = new Date();\n         console.log('현재시간 : '+now+typeof(now));\n         const deffer = now - Date.parse(res.data);\n        beforeDateTime = res.data;\n         console.log('이전시간 : ' + beforeDateTime+ typeof(beforeDateTime));\n         console.log('시간차이 : '+ deffer);\n         const day = deffer/(1000*3600*24);\n         const hour = ((deffer%(1000*36000*24))/(1000*3600));\n         const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n         intervalTimeText = '경과시간 : ' +Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분' ;\n         console.log(\"'\"+beforeDateTime+\"'\"+typeof(beforeDateTime))\n         console.log(intervalTimeText+typeof(intervalTimeText));\n       \n      }).catch(err => {\n        console.log(err)\n      });\n\n  }\n  \n  // 페이지 바로 동작\n//getValue();\n\n// 현재시간 저장 요청\nasync function onSave () {\n  await axios.post(url,{reqType:'saveNow'}, {\n    headers: {\n      \"Content-Type\" : \"text/plain;charset=utf-8\",\n      allowRedirects: false\n    }\n  }).then(res=> {\n\n  }).catch(err => {\n    console.log(err);\n  })\n}\n\nreturn (\n      <div>\n\n        <div>소중이 마지막 물갈이 시간 : {beforeDateTime}</div>\n        <div>경과시간 : {intervalTimeText}</div>\n        <button onClick={onSave}>물갈이를 완료했습니다.\t&#40;현재를 저장합니다.\t&#41;</button> \n\n\n        <button onClick={getValue}>실행</button> \n      </div>\n  );\n\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}