{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\";\nimport './App.css';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\nimport axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const data = {\n    //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n    key: \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n    title: 'React POST Request Example'\n  };\n\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': 'http://localhost:3000'\n    },\n    body: JSON.stringify(data)\n  };\n  const onClick = async () => {\n    await axios(\"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\", requestOptions).then(response => {\n      console.log('응답시작');\n      if (response.ok) {\n        console.log('응답있어요');\n        return response.json();\n      }\n      console.log('응답없어요');\n      throw new Error('Network response was not ok.');\n    }).catch(error => {\n      console.log('응답에러');\n      console.log(`error: ${error}`);\n    });\n  };\n\n  /*   const onClick = () => {\n      axios({\n        method : 'post',\n        url : \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\",\n        data : {a:11, b:22}\n      })\n      .then(function (response) {\n        // response  \n   }).catch(function (error) {\n       // 오류발생시 실행\n       console.log('오류발생했습니다.')\n   }).then(function() {\n       // 항상 실행\n   });\n    } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uACB0\\uACFC \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","App","data","key","title","requestOptions","method","headers","body","JSON","stringify","onClick","then","response","console","log","ok","json","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\nimport axios from 'axios';\n\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n\n\n  const data = {\n    //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n   key : \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n    title: 'React POST Request Example'\n  }\n\n      // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin' : 'http://localhost:3000'},\n        body: JSON.stringify(data)\n    };\n\n   const onClick = async () => {\n  await axios(\"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\",\n   requestOptions\n  ).then((response) => {\n    console.log('응답시작');\n      if(response.ok) {\n        console.log('응답있어요')\n        return response.json();\n      }\n      console.log('응답없어요')\n      throw new Error('Network response was not ok.');\n  }\n  )\n  .catch((error) => {\n    console.log('응답에러')\n    console.log(`error: ${error}`)\n  }\n\n  )\n  }\n\n\n/*   const onClick = () => {\n    axios({\n      method : 'post',\n      url : \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\",\n      data : {a:11, b:22}\n    })\n    .then(function (response) {\n      // response  \n }).catch(function (error) {\n     // 오류발생시 실행\n     console.log('오류발생했습니다.')\n }).then(function() {\n     // 항상 실행\n });\n  } */\n  \n\nreturn (\n      <div>\n        <button onClick={onClick}>결과 확인</button> \n        <div></div>\n      </div>\n  );\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAGhB,MAAMC,IAAI,GAAG;IACX;IACDC,GAAG,EAAG,0EAA0E;IAC/EC,KAAK,EAAE;EACT,CAAC;;EAEG;EACF,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,6BAA6B,EAAG;IAAuB,CAAC;IACvGC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC7B,CAAC;EAEF,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMb,KAAK,CAAC,kHAAkH,EAC7HO,cAAc,CACd,CAACO,IAAI,CAAEC,QAAQ,IAAK;MACnBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACjB,IAAGF,QAAQ,CAACG,EAAE,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAOF,QAAQ,CAACI,IAAI,EAAE;MACxB;MACAH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;IACnD,CAAC,CACA,CACAC,KAAK,CAAEC,KAAK,IAAK;MAChBN,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAAE,UAASK,KAAM,EAAC,CAAC;IAChC,CAAC,CAEA;EACD,CAAC;;EAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGA,oBACMpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQW,OAAO,EAAEA,OAAQ;MAAAU,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxCzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAGZ,CAAC;AAAAC,EAAA,GA9DKzB,GAAG;AAgET,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}