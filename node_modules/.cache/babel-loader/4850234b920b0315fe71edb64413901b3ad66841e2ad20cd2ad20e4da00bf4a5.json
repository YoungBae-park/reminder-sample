{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\n//  import AddItem from './pages/AddItems';\n// import Insert from './components/Insert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [beforeDateTime, setBeforeDateTime] = useState();\n  const [intervalTimeText, setIntervalTimeText] = useState();\n  const [title, setTitle] = useState();\n  const [targetPeriod, setTargetPeriod] = useState();\n  // const [timerId,setTimerId] = useState();\n  const url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\";\n  const data = {\n    reqType: 'execution'\n  };\n\n  /*   const data2 = {\n      reqType :'saveNow'\n      }; */\n\n  async function getValue() {\n    await axios.post(url, data, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {\n      //     console.log('res : '+res.data );\n      //      console.log(\"dataparse : \"+Date.parse(res.data))\n      //     console.log(\"beforeDateTime : \"+beforeDateTime);\n\n      setBeforeDateTime(res.data);\n      setTime();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function setTime() {\n    let now = new Date();\n    //console.log('현재시간 : '+now+typeof(now));\n    const deffer = now - Date.parse(beforeDateTime);\n    //console.log('이전시간 : ' + beforeDateTime+ typeof(beforeDateTime));\n    //console.log('시간차이 : '+ deffer);\n    const day = deffer / (1000 * 3600 * 24);\n    const hour = deffer % (1000 * 3600 * 24) / (1000 * 3600);\n    const minute = deffer % (1000 * 3600 * 24) % (1000 * 3600) / (1000 * 60);\n    const second = deffer % (1000 * 3600 * 24) % (1000 * 3600) % (1000 * 60) / 1000;\n    setIntervalTimeText(Math.floor(day) + '일 ' + Math.floor(hour) + '시 ' + Math.floor(minute) + '분' + Math.floor(second) + '초');\n    //console.log(\"'\"+beforeDateTime+\"'\"+typeof(beforeDateTime))\n    //console.log(intervalTimeText+typeof(intervalTimeText));\n  }\n  // 페이지 바로 동작\n  getValue();\n  //setTimerId(setInterval(setTime,10000));\n\n  // 현재시간 저장 요청\n  async function onSave() {\n    await axios.post(url, {\n      reqType: 'saveNow'\n    }, {\n      headers: {\n        \"Content-Type\": \"text/plain;charset=utf-8\",\n        allowRedirects: false\n      }\n    }).then(res => {\n      // console.log('저장요청이 완료되었습니다.')\n      // console.log(res);\n      //clearInterval(timerId);\n      getValue();\n      setTime();\n      //setTimerId(setInterval(setTime,10000));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const onChangeTitle = useCallback(e => {\n    setTitle(e.target.value);\n  });\n  const onChangeTargetPeriod = useCallback(e => {\n    setTargetPeriod(e.target.value);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC9C1\\uC804 \\uB9C8\\uC9C0\\uB9C9 \\uC218\\uD589 \\uC2DC\\uAC01 : \", beforeDateTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACBD\\uACFC\\uC2DC\\uAC04 : \", intervalTimeText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"<\\uC785\\uB825\\uB780>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [\"\\uC81C\\uBAA9 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825 \\uD558\\uC138\\uC694.\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 18\n        }, this), \"\\uC8FC\\uAE30 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"targetPeriod\",\n          type: \"text\",\n          placeholder: \"\\uC8FC\\uAE30\\uB97C \\uC22B\\uC790\\uB85C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: targetPeriod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 6\n  }, this);\n};\n_s(App, \"gC8o1stQwfwdpmJ27b/6hrNQ6xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","axios","jsxDEV","_jsxDEV","App","_s","beforeDateTime","setBeforeDateTime","intervalTimeText","setIntervalTimeText","title","setTitle","targetPeriod","setTargetPeriod","url","data","reqType","getValue","post","headers","allowRedirects","then","res","setTime","catch","err","console","log","now","Date","deffer","parse","day","hour","minute","second","Math","floor","onSave","onChangeTitle","e","target","value","onChangeTargetPeriod","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport React , {useState, useCallback} from 'react';\nimport axios from 'axios';\n//  import AddItem from './pages/AddItems';\n// import Insert from './components/Insert';\n\n\n\n\nconst App = () => {\n\n  const [beforeDateTime, setBeforeDateTime] = useState();\n  const [intervalTimeText,setIntervalTimeText] = useState();\n  const [title, setTitle] = useState();\n  const [targetPeriod, setTargetPeriod] = useState();\n // const [timerId,setTimerId] = useState();\nconst url = \"https://script.google.com/macros/s/AKfycbygey9yu0fTzDGTjMtPk1XuLgmPJ7XysoQWkCBuWiuNpFvZxUJePWc2bx85dIzL0roM/exec\"\n\nconst data = {\n    reqType: 'execution',\n  };\n\n/*   const data2 = {\n    reqType :'saveNow'\n    }; */\n\n\n  async function getValue (){\n  \n    await axios.post(url,data, {\n          headers: {\n            \"Content-Type\": \"text/plain;charset=utf-8\",\n          allowRedirects: false \n          }\n        }).then(res => {\n   //     console.log('res : '+res.data );\n   //      console.log(\"dataparse : \"+Date.parse(res.data))\n    //     console.log(\"beforeDateTime : \"+beforeDateTime);\n\n         setBeforeDateTime(res.data) ;\n          setTime();\n  \n      }).catch(err => {\n        console.log(err)\n      });\n\n  }\n  \n\n\nfunction setTime () {\n  let now = new Date();\n  //console.log('현재시간 : '+now+typeof(now));\n  const deffer = now - Date.parse(beforeDateTime);\n  //console.log('이전시간 : ' + beforeDateTime+ typeof(beforeDateTime));\n  //console.log('시간차이 : '+ deffer);\n  const day = deffer/(1000*3600*24);\n  const hour = ((deffer%(1000*3600*24))/(1000*3600));\n  const minute = ((deffer%(1000*3600*24))%(1000*3600))/(1000*60);\n  const second = ((deffer%(1000*3600*24))%(1000*3600))%(1000*60)/1000;\n  setIntervalTimeText(Math.floor(day)+'일 '+Math.floor(hour)+'시 '+Math.floor(minute)+'분'+Math.floor(second)+'초') ;\n  //console.log(\"'\"+beforeDateTime+\"'\"+typeof(beforeDateTime))\n  //console.log(intervalTimeText+typeof(intervalTimeText));\n\n\n}\n  // 페이지 바로 동작\ngetValue();\n//setTimerId(setInterval(setTime,10000));\n\n// 현재시간 저장 요청\nasync function onSave () {\n  await axios.post(url,{reqType: 'saveNow'}, {\n    headers: {\n      \"Content-Type\" : \"text/plain;charset=utf-8\",\n      allowRedirects: false\n    }\n  }).then(res=> {\n // console.log('저장요청이 완료되었습니다.')\n // console.log(res);\n  //clearInterval(timerId);\n  getValue();\n  setTime();\n  //setTimerId(setInterval(setTime,10000));\n  }).catch(err => {\n    console.log(err);\n  })\n}\n\n\nconst onChangeTitle = useCallback(e => {\n  setTitle(e.target.value);\n}\n)\nconst onChangeTargetPeriod = useCallback(e => {\n  setTargetPeriod(e.target.value);\n})\n\n\n\nreturn (\n\n     <div>\n\n        <div>직전 마지막 수행 시각 : {beforeDateTime}</div>\n        <div>경과시간 : {intervalTimeText}</div>\n        <button onClick={onSave}>초기화</button> \n        <hr/>\n        <div>\n          <h3>&lt;입력란&gt;</h3><br/>\n          <form>\n            제목 : <input name='title' type = 'text' placeholder='제목을 입력 하세요.' value={title}/>\n            주기 : <input name='targetPeriod' type = 'text' placeholder='주기를 숫자로 입력하세요' value={targetPeriod} />\n            <button type='submit'>생성</button>\n          </form>\n        </div>\n      </div>\n \n  );\n\n\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,EAAE;EACtD,MAAM,CAACS,gBAAgB,EAACC,mBAAmB,CAAC,GAAGV,QAAQ,EAAE;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,EAAE;EACpC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,EAAE;EACnD;EACD,MAAMe,GAAG,GAAG,kHAAkH;EAE9H,MAAMC,IAAI,GAAG;IACTC,OAAO,EAAE;EACX,CAAC;;EAEH;AACA;AACA;;EAGE,eAAeC,QAAQA,CAAA,EAAG;IAExB,MAAMhB,KAAK,CAACiB,IAAI,CAACJ,GAAG,EAACC,IAAI,EAAE;MACrBI,OAAO,EAAE;QACP,cAAc,EAAE,0BAA0B;QAC5CC,cAAc,EAAE;MAChB;IACF,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MACpB;MACA;MACC;;MAEKf,iBAAiB,CAACe,GAAG,CAACP,IAAI,CAAC;MAC1BQ,OAAO,EAAE;IAEb,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EAEN;EAIF,SAASF,OAAOA,CAAA,EAAI;IAClB,IAAIK,GAAG,GAAG,IAAIC,IAAI,EAAE;IACpB;IACA,MAAMC,MAAM,GAAGF,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACzB,cAAc,CAAC;IAC/C;IACA;IACA,MAAM0B,GAAG,GAAGF,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC;IACjC,MAAMG,IAAI,GAAKH,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAE;IAClD,MAAMI,MAAM,GAAKJ,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAC,IAAG,IAAI,GAAC,EAAE,CAAC;IAC9D,MAAMK,MAAM,GAAKL,MAAM,IAAE,IAAI,GAAC,IAAI,GAAC,EAAE,CAAC,IAAG,IAAI,GAAC,IAAI,CAAC,IAAG,IAAI,GAAC,EAAE,CAAC,GAAC,IAAI;IACnErB,mBAAmB,CAAC2B,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,GAAC,IAAI,GAACI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAC,IAAI,GAACG,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,GAAC,GAAG,GAACE,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,GAAC,GAAG,CAAC;IAC7G;IACA;EAGF;EACE;EACFlB,QAAQ,EAAE;EACV;;EAEA;EACA,eAAeqB,MAAMA,CAAA,EAAI;IACvB,MAAMrC,KAAK,CAACiB,IAAI,CAACJ,GAAG,EAAC;MAACE,OAAO,EAAE;IAAS,CAAC,EAAE;MACzCG,OAAO,EAAE;QACP,cAAc,EAAG,0BAA0B;QAC3CC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAG;MACf;MACA;MACC;MACAL,QAAQ,EAAE;MACVM,OAAO,EAAE;MACT;IACA,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAGA,MAAMc,aAAa,GAAGvC,WAAW,CAACwC,CAAC,IAAI;IACrC7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC,CACA;EACD,MAAMC,oBAAoB,GAAG3C,WAAW,CAACwC,CAAC,IAAI;IAC5C3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC,CAAC;EAIF,oBAEKvC,OAAA;IAAAyC,QAAA,gBAEGzC,OAAA;MAAAyC,QAAA,GAAK,8DAAe,EAACtC,cAAc;IAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC1C7C,OAAA;MAAAyC,QAAA,GAAK,6BAAO,EAACpC,gBAAgB;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACpC7C,OAAA;MAAQ8C,OAAO,EAAEX,MAAO;MAAAM,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrC7C,OAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACL7C,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QAAAyC,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAAA7C,OAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzB7C,OAAA;QAAAyC,QAAA,GAAM,iBACC,eAAAzC,OAAA;UAAO+C,IAAI,EAAC,OAAO;UAACC,IAAI,EAAG,MAAM;UAACC,WAAW,EAAC,qDAAa;UAACV,KAAK,EAAEhC;QAAM;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,mBAC3E,eAAA7C,OAAA;UAAO+C,IAAI,EAAC,cAAc;UAACC,IAAI,EAAG,MAAM;UAACC,WAAW,EAAC,sEAAe;UAACV,KAAK,EAAE9B;QAAa;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACjG7C,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAKZ,CAAC;AAAA3C,EAAA,CAhHKD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAkHT,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}