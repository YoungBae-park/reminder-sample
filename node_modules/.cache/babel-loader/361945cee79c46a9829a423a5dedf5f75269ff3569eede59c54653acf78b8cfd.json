{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\";\nimport './App.css';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const output = \"\";\n\n  /*  const data = {\n     //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n    key : \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n     title: 'React POST Request Example'\n   } */\n\n  // Simple POST request with a JSON body using fetch\n\n  //const data = new FormData();\n  const url = \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\";\n  //data.append(\"title\", \"hello\");\n  const data = {\n    'title': 'hello'\n  };\n  const requestOptions = {\n    method: 'POST',\n    mode: 'no-cors',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  };\n  const getDate = () => {\n    fetch(url, {\n      method: \"GET\"\n    });\n  };\n  const onClick = async () => {\n    await fetch(url, requestOptions).then(response => {\n      console.log('응답시작');\n      if (response.ok) {\n        console.log('응답있어요');\n        return response.json();\n      }\n      console.log('응답없어요');\n      console.log('response : ' + response);\n      throw new Error('Network response was not ok.');\n    }).catch(error => {\n      console.log('응답에러');\n      console.log(`error: ${error}`);\n    });\n  };\n\n  /*   const onClick = () => {\n  \n      axios.defaults.withCredentials = true;\n  \n      axios.post(`${url}`, {},\n  {\n  \twithCredentials: true // 쿠키 cors 통신 설정\n  }).then(response => {\n  \tconsole.log(response);\n  });\n    } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\uACB0\\uACFC \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uCD9C\\uB825\\uAC12 : '\", getDate, \"'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","output","url","data","requestOptions","method","mode","credentials","headers","body","JSON","stringify","getDate","fetch","onClick","then","response","console","log","ok","json","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\n// import gapi from 'googleapis';\n//import React, {useState} from 'react';\n//import 'semantic-ui-css/semantic.min.css'\n//import { Button, Form, Container, Header } from 'semantic-ui-react'\n//import file from './date.txt';\n//import axios from 'axios';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n\nconst output  = \"\";\n\n /*  const data = {\n    //key : \"AIzaSyA9x7L8UieoJDD0R5TA7rMqlPwRMPgIlM0\",\n   key : \"AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD\",\n    title: 'React POST Request Example'\n  } */\n\n      // Simple POST request with a JSON body using fetch\n\n//const data = new FormData();\nconst url = \"https://script.google.com/macros/s/AKfycbzPoYDfcSv2cDbQRc-A3tH3YmBA3OeDBhbvHOEzaAjPooRzS6N5GFzTdnopKoZpRqcD/exec\"\n//data.append(\"title\", \"hello\");\nconst data = {'title': 'hello'}\n\n    const requestOptions = {\n        method: 'POST',\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json'},\n        body: JSON.stringify(data)\n    };\n\n\n\n\nconst getDate = () => {\n  fetch (url,{ method : \"GET\" })\n}\n\n\n   const onClick = async () => {\n  await fetch(url,\n   requestOptions\n  ).then((response) => {\n    console.log('응답시작');\n      if(response.ok) {\n        console.log('응답있어요')\n        return response.json();\n      }\n\n      console.log('응답없어요')\n      console.log('response : '+response)\n      throw new Error('Network response was not ok.');\n  }\n  )\n  .catch((error) => {\n    console.log('응답에러')\n    console.log(`error: ${error}`)\n  }\n\n  )\n  }\n\n\n/*   const onClick = () => {\n\n    axios.defaults.withCredentials = true;\n\n    axios.post(`${url}`, {},\n{\n\twithCredentials: true // 쿠키 cors 통신 설정\n}).then(response => {\n\tconsole.log(response);\n});\n  } */\n  \n\nreturn (\n      <div>\n        <button onClick={onClick}>결과 확인</button> \n        <div>출력값 : '{getDate}'</div>\n      </div>\n  );\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAElB,MAAMC,MAAM,GAAI,EAAE;;EAEjB;AACD;AACA;AACA;AACA;;EAEM;;EAEN;EACA,MAAMC,GAAG,GAAG,kHAAkH;EAC9H;EACA,MAAMC,IAAI,GAAG;IAAC,OAAO,EAAE;EAAO,CAAC;EAE3B,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,SAAS;IACtBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB,CAAC;IAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC7B,CAAC;EAKL,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAEX,GAAG,EAAC;MAAEG,MAAM,EAAG;IAAM,CAAC,CAAC;EAChC,CAAC;EAGE,MAAMS,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMD,KAAK,CAACX,GAAG,EACdE,cAAc,CACd,CAACW,IAAI,CAAEC,QAAQ,IAAK;MACnBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACjB,IAAGF,QAAQ,CAACG,EAAE,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpB,OAAOF,QAAQ,CAACI,IAAI,EAAE;MACxB;MAEAH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBD,OAAO,CAACC,GAAG,CAAC,aAAa,GAACF,QAAQ,CAAC;MACnC,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACnD,CAAC,CACA,CACAC,KAAK,CAAEC,KAAK,IAAK;MAChBN,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAAE,UAASK,KAAM,EAAC,CAAC;IAChC,CAAC,CAEA;EACD,CAAC;;EAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGA,oBACMxB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQe,OAAO,EAAEA,OAAQ;MAAAU,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxC7B,OAAA;MAAAyB,QAAA,GAAK,wBAAO,EAACZ,OAAO,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxB;AAGZ,CAAC;AAAAC,EAAA,GA7EK7B,GAAG;AA+ET,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}