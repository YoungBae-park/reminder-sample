{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/libs/googlesheet.ts\n\nimport { GoogleSpreadsheet, GoogleSpreadsheetRow } from \"google-spreadsheet\";\nimport { useEffect, useState } from \"react\";\nconst credential = require('./hello.json');\n\n// 구글 시트 조회하는 로직\nexport const getGoogleSheet = async () => {\n  _s();\n  const doc = new GoogleSpreadsheet('12xvrWKrNc9c0QotSRIoF7a8NvULziuIhavvVnKo7RsY');\n  // 구글 인증이 필요하다.\n  await doc.useServiceAccountAuth(credential);\n  await doc.loadInfo();\n  return doc;\n};\n\n// 구글 시트 조회하는 custom useHook\n_s(getGoogleSheet, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", true);\nconst useGoogleSheet = sheetId => {\n  _s2();\n  const [googleSheetRows, setGoogleSheetRows] = useState(GoogleSpreadsheetRow) > [];\n  const fetchGoogleSheetRows = async () => {\n    const googleSheet = await getGoogleSheet();\n    const sheetsByIdElement = googleSheet.sheetsById[sheetId];\n    const rows = await sheetsByIdElement.getRows();\n    setGoogleSheetRows(rows);\n  };\n  useEffect(() => {\n    fetchGoogleSheetRows();\n  }, []);\n  return [googleSheetRows];\n};\n_s2(useGoogleSheet, \"CCoJr7nRmk585RVtYtQ19qTRdlc=\");\nexport default useGoogleSheet;","map":{"version":3,"names":["GoogleSpreadsheet","GoogleSpreadsheetRow","useEffect","useState","credential","require","getGoogleSheet","_s","doc","useServiceAccountAuth","loadInfo","useGoogleSheet","sheetId","_s2","googleSheetRows","setGoogleSheetRows","fetchGoogleSheetRows","googleSheet","sheetsByIdElement","sheetsById","rows","getRows"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/libs/googlesheet.js"],"sourcesContent":["// src/libs/googlesheet.ts\n\nimport {GoogleSpreadsheet, GoogleSpreadsheetRow} from \"google-spreadsheet\";\nimport {useEffect, useState} from \"react\";\n\nconst credential = require('./hello.json');\n\n// 구글 시트 조회하는 로직\nexport const getGoogleSheet = async () => {\n    const doc = new GoogleSpreadsheet('12xvrWKrNc9c0QotSRIoF7a8NvULziuIhavvVnKo7RsY');\n    // 구글 인증이 필요하다.\n    await doc.useServiceAccountAuth(credential);\n    await doc.loadInfo();\n    return doc;\n}\n\n// 구글 시트 조회하는 custom useHook\nconst useGoogleSheet = (sheetId) => {\n    const [googleSheetRows, setGoogleSheetRows] = useState(GoogleSpreadsheetRow)>([]);\n\n    const fetchGoogleSheetRows = async () => {\n        const googleSheet = await getGoogleSheet();\n        const sheetsByIdElement = googleSheet.sheetsById[sheetId];\n        const rows = await sheetsByIdElement.getRows();\n        setGoogleSheetRows(rows)\n    }\n\n    useEffect(() => {\n        fetchGoogleSheetRows();\n    },[]);\n\n    return [googleSheetRows];\n}\n\nexport default useGoogleSheet;"],"mappings":";;AAAA;;AAEA,SAAQA,iBAAiB,EAAEC,oBAAoB,QAAO,oBAAoB;AAC1E,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,MAAMC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAE1C;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACtC,MAAMC,GAAG,GAAG,IAAIR,iBAAiB,CAAC,8CAA8C,CAAC;EACjF;EACA,MAAMQ,GAAG,CAACC,qBAAqB,CAACL,UAAU,CAAC;EAC3C,MAAMI,GAAG,CAACE,QAAQ,EAAE;EACpB,OAAOF,GAAG;AACd,CAAC;;AAED;AAAAD,EAAA,CARaD,cAAc;AAS3B,MAAMK,cAAc,GAAIC,OAAO,IAAK;EAAAC,GAAA;EAChC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAACF,oBAAoB,CAAC,GAAE,EAAG;EAEjF,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,WAAW,GAAG,MAAMX,cAAc,EAAE;IAC1C,MAAMY,iBAAiB,GAAGD,WAAW,CAACE,UAAU,CAACP,OAAO,CAAC;IACzD,MAAMQ,IAAI,GAAG,MAAMF,iBAAiB,CAACG,OAAO,EAAE;IAC9CN,kBAAkB,CAACK,IAAI,CAAC;EAC5B,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZc,oBAAoB,EAAE;EAC1B,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO,CAACF,eAAe,CAAC;AAC5B,CAAC;AAAAD,GAAA,CAfKF,cAAc;AAiBpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}