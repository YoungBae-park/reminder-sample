{"ast":null,"code":"var _jsxFileName = \"/Users/yb/Documents/dev/react/reminder-sample/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useGoogleSheet } from 'react';\nimport file from './date.txt';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [standardTime, setStandardTime] = useState('');\n  console.log('시작');\n  const [data] = useGoogleSheet(0);\n  console.log(data[0][0]);\n  const languageList = ['value1'];\n  const today = new Date();\n  console.log(today);\n  //console.log(data[0][0]);\n\n  fetch(file).then(r => r.text()).then(text => {\n    setStandardTime(text);\n  });\n  const onReset = () => {\n    setStandardTime('소중이마지막물갈이시각 : ' + today.toDateString() + \"/\" + today.toTimeString());\n    console.log('re : ' + standardTime);\n    fetch(file).then(r => r.text()).then(text => {\n      setStandardTime(text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(row => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC544\\uC774\\uB514: \", row[languageList[0]]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), standardTime, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"\\uB9AC\\uC14B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wXjPggxtYFRDU1/YYlufTUCi+UI=\", false, function () {\n  return [useGoogleSheet];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useGoogleSheet","file","jsxDEV","_jsxDEV","App","_s","standardTime","setStandardTime","console","log","data","languageList","today","Date","fetch","then","r","text","onReset","toDateString","toTimeString","className","children","map","row","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yb/Documents/dev/react/reminder-sample/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useGoogleSheet} from 'react';\nimport file from './date.txt';\n\n// 처음에는 현재날짜를 표시하는 기능을 만든다.\n// 날짜를 표현하는 텍스트 , 버튼을 클릭시 클릭시점의 날짜와 시간표시\n\n\n\nconst App = () => {\n\n\n\n\n  const [standardTime, setStandardTime] = useState('');\n  console.log('시작');\n  const [data] = useGoogleSheet(0);\n  console.log(data[0][0])\n  const languageList = ['value1'];\n  \n  const today = new Date();\n  console.log(today);\n  //console.log(data[0][0]);\n\n  fetch(file)\n  .then(r => r.text())\n  .then(text => {\n   setStandardTime(text);\n });\n\n  const onReset = () => {\n     setStandardTime('소중이마지막물갈이시각 : '+today.toDateString()+\"/\"+today.toTimeString());\n\n     console.log('re : '+standardTime);\n\n     fetch(file)\n .then(r => r.text())\n .then(text => {\n  setStandardTime(text);\n});\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        {data.map((row) => {\n          return (<div>아이디: {row[languageList[0]]}</div>)\n        })}\n      </div>\n      {standardTime}\n      <button onClick={onReset} >리셋</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,cAAc,QAAO,OAAO;AACrD,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAKhB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpDS,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjB,MAAM,CAACC,IAAI,CAAC,GAAGV,cAAc,CAAC,CAAC,CAAC;EAChCQ,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,MAAMC,YAAY,GAAG,CAAC,QAAQ,CAAC;EAE/B,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxBL,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EAClB;;EAEAE,KAAK,CAACb,IAAI,CAAC,CACVc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACE,IAAI,IAAI;IACbV,eAAe,CAACU,IAAI,CAAC;EACvB,CAAC,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACnBX,eAAe,CAAC,gBAAgB,GAACK,KAAK,CAACO,YAAY,EAAE,GAAC,GAAG,GAACP,KAAK,CAACQ,YAAY,EAAE,CAAC;IAE/EZ,OAAO,CAACC,GAAG,CAAC,OAAO,GAACH,YAAY,CAAC;IAEjCQ,KAAK,CAACb,IAAI,CAAC,CACdc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CAACE,IAAI,IAAI;MACbV,eAAe,CAACU,IAAI,CAAC;IACvB,CAAC,CAAC;EACA,CAAC;EAED,oBACEd,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EACGZ,IAAI,CAACa,GAAG,CAAEC,GAAG,IAAK;QACjB,oBAAQrB,OAAA;UAAAmB,QAAA,GAAK,sBAAK,EAACE,GAAG,CAACb,YAAY,CAAC,CAAC,CAAC,CAAC;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAChD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,EACLtB,YAAY,eACbH,OAAA;MAAQ0B,OAAO,EAAEX,OAAQ;MAAAI,QAAA,EAAE;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEV,CAAC;AAAAvB,EAAA,CA5CKD,GAAG;EAAA,QAOQJ,cAAc;AAAA;AAAA8B,EAAA,GAPzB1B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}